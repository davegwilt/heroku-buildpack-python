#!/usr/bin/env bash

# This script serves as the NumPy build step of the
# [**Python Buildpack**](https://github.com/heroku/heroku-buildpack-python)
# compiler.
#
# A [buildpack](http://devcenter.heroku.com/articles/buildpacks) is an
# adapter between a Python application and Heroku's runtime.
#
# This script is invoked by [`bin/compile`](/).

# The location of the pre-compiled binaries.
VENDORED_GIT_NAME=heroku-buildpack-python-libraries
VENDORED_GIT_REPO="git://github.com/norbert/${VENDORED_GIT_NAME}.git"
VENDORED_GIT_CACHE="${CACHE_DIR}/${VENDORED_GIT_NAME}"

ATLAS_TAR=atlas-3.6.0.tar.bz2
NUMPY_EGG=numpy-1.7.1-py2.7-linux-x86_64.egg
SCIPY_EGG=scipy-0.12.0-py2.7-linux-x86_64.egg

if (grep -Eiq "^\s*numpy" requirements.txt) then
  puts-step "Preparing NumPy"
  cd .heroku

  EASY_INSTALL=$(pwd)/python/bin/easy_install

  if [ ! -d "${VENDORED_GIT_CACHE}" ]; then
    echo -n "       Cloning libraries..."
    git clone --depth 1 "${VENDORED_GIT_REPO}" "${VENDORED_GIT_CACHE}" > /dev/null
    echo " done"
  fi

  if [ ! -d "vendor/lib/atlas" ]; then
    echo "Extracting ATLAS libraries" | indent
    mkdir -p vendor
    tar xjf "${VENDORED_GIT_CACHE}/${ATLAS_TAR}" -C vendor
  fi

  echo "Installing NumPy egg" | indent
  $EASY_INSTALL -q "${VENDORED_GIT_CACHE}/${NUMPY_EGG}"

  echo "Installing SciPy egg" | indent
  $EASY_INSTALL -q "${VENDORED_GIT_CACHE}/${SCIPY_EGG}"

  echo "Setting library paths to include ATLAS" | indent
  export LIBRARY_PATH="${LIBRARY_PATH}:${LIBRARY_PATH}/atlas"
  export LD_LIBRARY_PATH="${LIBRARY_PATH}"

  cd ..
fi
